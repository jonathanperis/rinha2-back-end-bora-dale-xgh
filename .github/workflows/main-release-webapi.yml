name: Main Release Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup-build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore Dependencies
        run: dotnet restore

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
  
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          updateAssemblyInfo: true

      - name: Build Application
        run: dotnet build --configuration Release --no-restore /p:Version=${{ env.GitVersion_SemVer }}

  build-push-image:
    needs: setup-build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./src/src/WebApi/Dockerfile
          tags: jonathanperis/rinha2-back-end-bora-dale-xgh:latest
          build-args: |
            AOT=true
            TRIM=false
            EXTRA_OPTIMIZE=true
            BUILD_ARCHITECTURE=linux-x64
            BUILD_CONFIGURATION=Release

  container-test:
    needs: build-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build and Run Docker Compose
        run: |
          docker-compose -f ./prod/docker-compose.yml up nginx -d
          sleep 10

      - name: Test Healthcheck Endpoint
        run: |
          for i in {1..20}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9999/healthz)
            if [ "$STATUS" -eq 200 ]; then
              echo "Healthcheck passed with status $STATUS"
              exit 0
            else
              echo "Healthcheck attempt $i failed with status $STATUS. Retrying..."
              sleep 2
            fi
          done
          echo "Healthcheck failed after 20 attempts."
          exit 1

  load-test:
    runs-on: ubuntu-latest
    needs: container-test
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Build and Run Docker Compose
        run: |
          docker-compose -f ./prod/docker-compose.yml up k6 --build --force-recreate 
          sleep 10

    #   - name: test
    #     run: |
    #       git clone --depth 1 --single-branch -b main https://github.com/jonathanperis/rinha-de-backend-2024-q1.git
    #       wget -P $RINHA_DIR https://repo1.maven.org/maven2/io/gatling/highcharts/gatling-charts-highcharts-bundle/3.10.3/gatling-charts-highcharts-bundle-3.10.3-bundle.zip
    #       unzip -d $RINHA_DIR $RINHA_DIR/gatling-charts-highcharts-bundle-3.10.3-bundle.zip
    #       sudo sh ./prod/executar-teste-local

    #       echo GATLING_REPORT=$(ls $RINHA_DIR/load-test/user-files/results | sort | head -n 1) >> $GITHUB_ENV

    #   - name: Fix permissions
    #     run: |
    #       chmod -c -R +rX "_site/" | while read line; do
    #         echo "::warning title=Invalid file permissions automatically fixed::$line"
    #       done

    #   - name: upload test results
    #     uses: actions/upload-pages-artifact@v3
    #     with:
    #       path: ${{ env.RINHA_DIR }}/load-test/user-files/results/${{ env.GATLING_REPORT }}
    #       retention-days: 2